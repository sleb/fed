rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data, admins can read all
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null &&
        (resource.data.get('role', '') == 'admin' ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('role', '') == 'admin'));
    }

    // Missionaries collection - authenticated users can read, only admins can write
    match /missionaries/{missionaryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('role', '') == 'admin';
    }

    // Companionships collection - authenticated users can read, only admins can write
    match /companionships/{companionshipId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('role', '') == 'admin';
    }



    // Signups collection - simplified rules to avoid evaluation errors
    match /signups/{signupId} {
      // Allow all authenticated users to read signups for now (simplified for pre-alpha)
      allow read: if request.auth != null;

      // Allow authenticated users to create/write signups
      allow write, create: if request.auth != null;
    }
  }
}
